# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim: fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           xcode_workaround 1.0
PortGroup           github 1.0
PortGroup           legacysupport 1.1
PortGroup           makefile 1.0

set branch          2.1
set version_date    2023-08-22T00:00:00Z
github.setup        LuaJIT LuaJIT 03c31124cc3b521ef54fe398e10fa55660a5057d
revision            0
checksums           rmd160  fe029f5595d05d7544de36b096da0bb074a1cd57 \
                    sha256  61dcc7ae3f543ae3cc30e66db060e31e2a77e4be34ee65e370c953d112b4d60c \
                    size    1073919

set version_date_s  [clock scan "${version_date}" -format {%Y-%m-%dT%H:%M:%SZ} -timezone :UTC]
version             ${branch}.${version_date_s}

name                luajit
categories          lang
license             MIT
maintainers         nomaintainer

description         a Just-In-Time Compiler for Lua
long_description    LuaJIT is a Just-In-Time Compiler for the Lua programming language.
homepage            https://luajit.org
github.tarball_from archive

conflicts           luajit-openresty

patchfiles          powerpc.patch

post-patch {
    reinplace "s|/usr/local|${prefix}|" ${worksrcpath}/etc/luajit.pc

    # Remove -march=i686 from CCOPT_x86
    reinplace -E {s|-march=[a-z0-9_]+||g} ${worksrcpath}/src/Makefile

    # The build process normally expects git and a .git directory to establish
    # the version but it includes a fallback for a `.relver` file
    set relver      [open "${worksrcpath}/.relver" w 0644]
    puts ${relver}  "${version_date_s}"
    close ${relver}
}

compiler.blacklist  {clang < 700} *gcc-4.2 macports-clang-3.3 macports-clang-3.4

# changes to compiler flags must be made before `CFLAGS=...`
xcode_workaround.type append_to_compiler_flags

configure.cflags-append -DLUAJIT_ENABLE_LUA52COMPAT
makefile.override   CC CFLAGS LDFLAGS PREFIX

build.target        amalg
build.args-append   Q=

post-destroot {
    xinstall -m 755 -d ${destroot}${prefix}/share/doc
    copy ${worksrcpath}/doc/ ${destroot}${prefix}/share/doc/${name}
}

livecheck.type      regex
livecheck.url       ${github.homepage}/commits/v${branch}.atom
livecheck.version   ${version_date}
livecheck.regex     {<updated>([:TZ0-9-]+)</updated>}
